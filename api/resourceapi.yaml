openapi: 3.0.4
info:
  title: Authorization service
  description: Proxy  API
  version: 0.1.9

servers:
  - url: http://localhost:8083/resource
    description: Local development server
  - url: https://www.handmadejewelry.com/resource
    description: Production server

paths:
  /service:
    post:
      summary: Create a new service
      description: Creates a new service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                isActive:
                  type: boolean
                host:
                  type: string
              required:
                - name
                - isActive
                - host
      responses:
        "201":
          $ref: '#/components/responses/CreateServiceResponse'
        "400":
          description: Invalid input data
        "500":
          description: Internal server error

  /service/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer

    put:
      summary: Update a service
      description: Updates an existing service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                isActive:
                  type: boolean
                host:
                  type: string
              required:
                - id
                - name
                - isActive
                - host
      responses:
        "200":
          $ref: '#/components/responses/CreateServiceResponse'
        "404":
          description: Service not found

    delete:
      summary: Delete a service
      description: Deletes a service by id
      responses:
        "204":
          description: Service deleted successfully
        "404":
          description: Service not found

    get:
      summary: Get a service by id
      description: Returns a service
      responses:
        "200":
          $ref: '#/components/responses/GetServiceResponse'
        "404":
          description: Service not found

  /service/name/{name}:
    get:
      summary: Get a service by name
      description: Returns a service
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/GetServiceResponse'
        "404":
          description: Service not found

  /resource:
    post:
      summary: Create a new resource
      description: Creates a new resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
      responses:
        "201":
          $ref: '#/components/responses/CreatedIdResponse'
        "400":
          description: Invalid input data
        "500":
          description: Internal server error

  /roles:
    get:
      summary: Get a list of roles
      description: Returns a list of roles
      responses:
        "200":
          description: A list of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: Roles not found

  /resource/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer

    put:
      summary: Update a new resource
      description: Updates a new resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
      responses:
        "201":
          $ref: '#/components/responses/CreatedIdResponse'
        "400":
          description: Invalid input data
        "500":
          description: Internal server error

    get:
      summary: Get a resource by id
      description: Returns a resource
      responses:
        "200":
          description: Resource found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "404":
          description: Resource not found

    delete:
      summary: Delete a resource by id
      description: Delete a resource by id
      responses:
        "404":
          description: Resource not found


components:
  schemas:
    ServiceCreate:
      type: object
      properties:
        name:
          type: string
        isActive:
          type: boolean
        host:
          type: string
      required:
        - name
        - isActive
        - host

    Service:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        isActive:
          type: boolean
        host:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - name
        - isActive
        - host
        - createdAt
        - updatedAt

    ResourceCreate:
      type: object
      properties:
        ServiceID:
          type: integer
          description: ID of the service
        PublicPath:
          type: string
          description: Public path of the resource
        ServicePath:
          type: string
          description: Service internal path
        Method:
          type: string
          description: HTTP method (GET, POST, etc.)
        Scheme:
          type: string
          description: URI scheme (http, https)
        Roles:
          type: array
          items:
            type: string
          description: List of roles allowed to access this resource
        IsActive:
          type: boolean
          description: Is the resource active
        CheckAccessToken:
          type: boolean
          description: Whether to check access token
        CheckRoles:
          type: boolean
          description: Whether to check roles
      required:
        - ServiceID
        - PublicPath
        - ServicePath
        - Method
        - Scheme
        - Roles
        - IsActive
        - CheckAccessToken
        - CheckRoles

    Resource:
      type: object
      properties:
        id:
          type: integer
        service_id:
          type: integer
        public_path:
          type: string
        service_path:
          type: string
        method:
          type: string
        scheme:
          type: string
        roles:
          type: array
          items:
            type: string
        is_active:
          type: boolean
        check_access_token:
          type: boolean
        check_roles:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true

  responses:
    CreateServiceResponse:
      description: Service created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the created service
    GetServiceResponse:
      description: Successfully retrieved the service
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Service'
    CreatedIdResponse:
      description: Created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the created resource